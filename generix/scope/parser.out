Created by PLY version 3.8 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> scope
Rule 1     scope -> <empty>
Rule 2     scope -> path
Rule 3     path -> IDENTIFIER
Rule 4     path -> NUMBER
Rule 5     path -> path DOT IDENTIFIER
Rule 6     path -> path DOT NUMBER

Terminals, with rules where they appear

DOT                  : 5 6
IDENTIFIER           : 3 5
NUMBER               : 4 6
error                : 

Nonterminals, with rules where they appear

path                 : 2 5 6
scope                : 0

Parsing method: LALR

state 0

    (0) S' -> . scope
    (1) scope -> .
    (2) scope -> . path
    (3) path -> . IDENTIFIER
    (4) path -> . NUMBER
    (5) path -> . path DOT IDENTIFIER
    (6) path -> . path DOT NUMBER

    $end            reduce using rule 1 (scope -> .)
    IDENTIFIER      shift and go to state 4
    NUMBER          shift and go to state 1

    path                           shift and go to state 2
    scope                          shift and go to state 3

state 1

    (4) path -> NUMBER .

    DOT             reduce using rule 4 (path -> NUMBER .)
    $end            reduce using rule 4 (path -> NUMBER .)


state 2

    (2) scope -> path .
    (5) path -> path . DOT IDENTIFIER
    (6) path -> path . DOT NUMBER

    $end            reduce using rule 2 (scope -> path .)
    DOT             shift and go to state 5


state 3

    (0) S' -> scope .



state 4

    (3) path -> IDENTIFIER .

    DOT             reduce using rule 3 (path -> IDENTIFIER .)
    $end            reduce using rule 3 (path -> IDENTIFIER .)


state 5

    (5) path -> path DOT . IDENTIFIER
    (6) path -> path DOT . NUMBER

    IDENTIFIER      shift and go to state 7
    NUMBER          shift and go to state 6


state 6

    (6) path -> path DOT NUMBER .

    DOT             reduce using rule 6 (path -> path DOT NUMBER .)
    $end            reduce using rule 6 (path -> path DOT NUMBER .)


state 7

    (5) path -> path DOT IDENTIFIER .

    DOT             reduce using rule 5 (path -> path DOT IDENTIFIER .)
    $end            reduce using rule 5 (path -> path DOT IDENTIFIER .)

